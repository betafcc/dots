#!/usr/bin/env bash
# TODO:
#    Add --header to fzf
#    Customize --prompt in fzf
#    Customize --border settings in fzf
#


main() (
    # +debug

    if [ -z "${_SEARCH_ROOT_PATH}" ]; then
        _SEARCH_ROOT_PATH="${PWD}"
    fi

    _RELATIVE_PWD="${PWD/#${_SEARCH_ROOT_PATH}/}"  # Remove common prefix
    _RELATIVE_PWD="${_RELATIVE_PWD/#\//}"  # Remove beginning slash

    _INITIAL_QUERY=$(echo "${_RELATIVE_PWD}" | _format "${_SEARCH_ROOT_PATH}")

    # exit 0

    cd "${_SEARCH_ROOT_PATH}" \
        && \
        {
            echo "${_RELATIVE_PWD}"  # include current in list of choices
            _fd ${_fd_extra_args[@]}
        } \
            | _format "${_SEARCH_ROOT_PATH}" \
            | _fzf --query "${_INITIAL_QUERY}" ${_fzf_extra_args[@]} \
            | \
            (
                # the 'safe' way I know to spread stdin lines to positional arguments
                set --
                while IFS= read -r line; do
                    set -- "$@" "${line}"
                done
                _generate_command "$@"
            )
)


_fd() {
    fd \
        --hidden \
        --no-ignore \
        --exclude '.git' \
        --exclude 'node_modules' \
        "$@"
}



_fzf() {
    fzf \
        --color 'light' \
        --height 80% \
        --layout reverse \
        --no-multi \
        --preview '_preview {}' \
        --preview-window 'right:60%' \
        --filepath-word \
        --bind 'tab:replace-query+top,shift-tab:backward-kill-word+top' \
        --expect='alt-m,alt-e,ctrl-g,esc,ctrl-m,enter' \
        "$@"
}


_preview() {
    local path="${1/#\~/$HOME}"

    if [ -f "${path}" ]; then
        bat \
            --style 'numbers,changes' \
            --color always \
            --italic-text always \
            "${path}"
    else
        exa --color=always --icons --group-directories-first -all "${path}"
    fi
}
export -f _preview


# Will format the relative paths given by _fd
# handle if prefix with root '/', home '~' or relative './'
# will also add trailing '/' when its directory
_format() {
    local search_root_path prefix line
    search_root_path="${1}"

    case "${search_root_path}" in
        "${HOME}") prefix='~/';;
        '/') prefix='/';;
        *) prefix='./';;
    esac

    while read -r line; do
        if [ -z "${line}" ]; then
            printf '%s\n' "${prefix}"
        elif [ -d "${line}" ]; then
            printf '%s/\n' "${prefix}${line}"
        else
            printf '%s\n' "${prefix}${line}"
        fi
    done
}
export -f _format


# Needed to expand '~' and relative paths for commands used insine fzf (like the preview)
_unformat() {
    "${1/#\~/$HOME}"
    echo "${1}"

}
export -f _unformat



# ( exited_command, ...selected_files ) -> command_to_execute
_generate_command() {
    case "${1}" in
        'alt-m') printf 'setsid xdg-open %q </dev/null >/dev/null 2>&1' "${2/\~/${HOME}}";;
        'alt-e') printf 'pushd %q >/dev/null; "${EDITOR}" .' "${2/\~/${HOME}}";;
        'ctrl-g'|'esc') printf '';;
        'ctrl-m'|'enter') printf 'pushd %q >/dev/null' "${2/\~/${HOME}}";;
    esac
}


main
